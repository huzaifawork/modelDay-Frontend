rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // SUPER PERMISSIVE RULES FOR DEVELOPMENT - ALLOW ALL READS
    match /{allPaths=**} {
      allow read: if true; // Allow all reads without authentication
    }
    // Profile pictures - COMPLETELY OPEN
    match /profile_pictures/{allPaths=**} {
      allow read, write: if true; // Completely open for development
    }

    // Admin profile pictures - COMPLETELY OPEN
    match /admin_profile_pictures/{allPaths=**} {
      allow read, write: if true; // Completely open for development
    }

    // Gallery images - COMPLETELY OPEN
    match /gallery/{allPaths=**} {
      allow read, write: if true; // Completely open for development
    }
    
    // Job/Event related files - users can manage their own
    match /jobs/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /job/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /direct_option/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /direct_booking/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /casting/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /test/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /polaroid/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /meeting/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /on_stay/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /other/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /ai_job/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write their own files
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Shared/public files (if needed)
    match /public/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // File size validation function
    function isValidFile() {
      return request.resource.size < 50 * 1024 * 1024 && // 50MB limit
             request.auth != null;
    }
    
    // Apply validation to all uploads
    match /{allPaths=**} {
      allow write: if isValidFile();
    }
  }
}
